# Generated by Django 2.2 on 2020-11-07 14:15

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="StyleType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "symbol_type",
                    models.CharField(
                        help_text="This will be used to identify the type of a style. The value will be extracted automatically from the uploaded QGIS style XML file.",
                        max_length=256,
                        unique=True,
                        verbose_name="Symbol type",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Default to the title case string of symbol_type. e.g. line would become Line.",
                        max_length=256,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A short description of this style type.",
                        max_length=1000,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        help_text="Please ensure the icon file is 500x500 px and in PNG format.",
                        null=True,
                        upload_to="styles/%Y",
                        verbose_name="Icon",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Order value for custom ordering.",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Style",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "upload_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The upload date. Automatically added on file upload.",
                        verbose_name="Uploaded on",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A unique name for this style. This will be initially automatically taken from the uploaded XML file, but may need manual revision if the name is not unique.",
                        max_length=256,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="A description of this style.",
                        max_length=5000,
                        verbose_name="Description",
                    ),
                ),
                (
                    "thumbnail_image",
                    models.ImageField(
                        blank=True,
                        help_text="Please upload an image that represents this style. The image should be square when uploaded.",
                        null=True,
                        upload_to="styles/%Y",
                        verbose_name="Thumbnail",
                    ),
                ),
                (
                    "xml_file",
                    models.FileField(
                        help_text="A QGIS style file in XML format.",
                        upload_to="styles/%Y",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["xml"]
                            )
                        ],
                        verbose_name="Style file",
                    ),
                ),
                (
                    "download_count",
                    models.IntegerField(
                        default=0,
                        editable=False,
                        help_text="The number of times this style has been downloaded. This is updated automatically.",
                        verbose_name="Downloads",
                    ),
                ),
                (
                    "approved",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Set to True if you wish to approve this style.",
                        verbose_name="Approved",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="The user who uploaded this style.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="styles_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "style_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="The type of this style, this will automatically be read from the XML file.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="styles.StyleType",
                        verbose_name="Type",
                    ),
                ),
            ],
            managers=[
                ("unapproved_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
