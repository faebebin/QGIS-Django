# Generated by Django 2.1.7 on 2019-03-12 04:30

import django.db.models.deletion
import plugins.models
import taggit_autosuggest.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Plugin",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created on"),
                ),
                (
                    "modified_on",
                    models.DateTimeField(editable=False, verbose_name="Modified on"),
                ),
                (
                    "author",
                    models.CharField(
                        help_text="This is the plugin's original author, if different from the uploader, this field will appear in the XML and in the web GUI",
                        max_length=256,
                        verbose_name="Author",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Author email"),
                ),
                (
                    "homepage",
                    models.URLField(
                        blank=True, null=True, verbose_name="Plugin homepage"
                    ),
                ),
                (
                    "repository",
                    models.URLField(null=True, verbose_name="Code repository"),
                ),
                ("tracker", models.URLField(null=True, verbose_name="Tracker")),
                (
                    "package_name",
                    models.CharField(
                        editable=False,
                        help_text="This is the plugin's internal name, equals to the main folder name",
                        max_length=256,
                        unique=True,
                        verbose_name="Package Name",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Must be unique",
                        max_length=256,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("about", models.TextField(null=True, verbose_name="About")),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="packages/%Y",
                        verbose_name="Icon",
                    ),
                ),
                (
                    "downloads",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="Downloads"
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Featured"
                    ),
                ),
                (
                    "deprecated",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Deprecated"
                    ),
                ),
                (
                    "server",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Server"
                    ),
                ),
                (
                    "rating_votes",
                    models.PositiveIntegerField(blank=True, default=0, editable=False),
                ),
                (
                    "rating_score",
                    models.IntegerField(blank=True, default=0, editable=False),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plugins_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "tags",
                    taggit_autosuggest.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "permissions": (("can_approve", "Can approve plugins versions"),),
            },
        ),
        migrations.CreateModel(
            name="PluginVersion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created on"),
                ),
                (
                    "downloads",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="Downloads"
                    ),
                ),
                (
                    "min_qg_version",
                    plugins.models.QGVersionZeroForcedField(
                        db_index=True,
                        max_length=32,
                        verbose_name="Minimum QGIS version",
                    ),
                ),
                (
                    "max_qg_version",
                    plugins.models.QGVersionZeroForcedField(
                        blank=True,
                        db_index=True,
                        max_length=32,
                        null=True,
                        verbose_name="Maximum QGIS version",
                    ),
                ),
                (
                    "version",
                    plugins.models.VersionField(
                        db_index=True, max_length=32, verbose_name="Version"
                    ),
                ),
                (
                    "changelog",
                    models.TextField(blank=True, null=True, verbose_name="Changelog"),
                ),
                (
                    "package",
                    models.FileField(
                        upload_to="packages/%Y", verbose_name="Plugin package"
                    ),
                ),
                (
                    "experimental",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Check this box if this version is experimental, leave unchecked if it's stable. Please note that this field might be overridden by metadata (if present).",
                        verbose_name="Experimental flag",
                    ),
                ),
                (
                    "approved",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Set to false if you wish to unapprove the plugin version.",
                        verbose_name="Approved",
                    ),
                ),
                (
                    "external_deps",
                    models.CharField(
                        help_text="PIP install string",
                        max_length=512,
                        null=True,
                        verbose_name="External dependencies",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "plugin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="plugins.Plugin"
                    ),
                ),
            ],
            options={
                "ordering": ("plugin", "-version", "experimental"),
            },
        ),
        migrations.AlterUniqueTogether(
            name="pluginversion",
            unique_together={("plugin", "version")},
        ),
    ]
